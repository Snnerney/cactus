---
import { Icon } from "astro-icon/components";

interface SocialLink {
    friendlyName: string;
    isWebmention?: boolean;
    link: string;
    name: string;
    type?: 'social' | 'friend';
    description?: string;
    iconType?: 'local' | 'url' | 'auto'; // 新增：图标类型配置
}

const socialLinks: SocialLink[] = [
    {
        friendlyName: "Github",
        link: "https://github.com/",
        name: "mdi:github",
        type: 'social'
    },
    {
        friendlyName: "Nodeseek",
        link: "https://www.nodeseek.com/",
        name: "nodeseek",
        type: 'social'
    },
    {
        friendlyName: "linux.do",
        link: "https://linux.do/",
        name: "linux.do",
        type: 'social'
    },
    {
        friendlyName: "lesswrong",
        link: "https://lesswrong.com",
        name: "lesswrong",
        type: 'social'
    }
];

const friendLinks: SocialLink[] = [
   {
        friendlyName: "Faust",
        link: "https://www.qqwx.de/",
        name: "faust",
        type: 'friend',
        iconType: 'local' 
    },
    {
        friendlyName: "焕昭君",
        link: "https://blog.huan666.de",
        name: "https://blog.huan666.de/img/author.webp",  
        type: 'friend',
        description: '知行合一，日拱一卒',
        iconType: 'url'  
    },
    {
        friendlyName: "xnne",
        link: "https://xnnehang.top/",
        name: "https://linux.do/uploads/default/optimized/4X/1/1/b/11bad4399b6b69291630913d58f85f8b11b60aa6_2_1000x1000.webp",  // 使用本地 SVG 图标
        type: 'friend',
        description: '青石巷道闻星铃，披虹沐雪见本心。他日北寒仙界会，一声道友尽沧桑。',
        iconType: 'url'  // 明确指定使用本地图标
    },
    {
        friendlyName: "homepage",
        link: "https://noospic.me",
        name: "https://linux.do/user_avatar/linux.do/noospic/288/690854_2.png",  
        type: 'friend',
        description: 'my homepage',
        iconType: 'url' 
    },
    

];
---
<div class="mt-8 flex min-h-[64px] flex-col gap-y-8">

    <!-- 社交链接区块 -->
    {socialLinks.length > 0 && (
        <div class="flex flex-col items-start gap-y-2 text-left">
            <p class="text-lg font-bold text-gray-600">Communities</p>
            <ul class="flex flex-wrap items-center gap-3">
                {socialLinks.map(({ friendlyName, isWebmention, link, name }) => (
                    <li class="h-8 w-8 flex items-center justify-center">
                        <a
                            class="inline-flex h-full w-full items-center justify-center sm:hover:text-link"
                            href={link}
                            rel={`noreferrer ${isWebmention ? "me authn" : ""}`}
                            target="_blank"
                        >
                            <Icon 
                                aria-hidden="true" 
                                class="h-full w-full" 
                                focusable="false" 
                                name={name} 
                            />
                            <span class="sr-only">{friendlyName}</span>
                        </a>
                    </li>
                ))}
            </ul>
        </div>
    )}

    <!-- 友链链接区块 -->
    {friendLinks.length > 0 && (
        <div class="flex flex-col items-start gap-y-2 text-left">
            <p class="text-lg font-bold text-gray-600">Friends</p>
            <ul class="flex flex-col gap-y-2">
                {friendLinks.map(({ friendlyName, isWebmention, link, name, description, iconType = 'auto' }) => {
                    // 智能判断图标类型
                    const isUrlIcon = iconType === 'url' || 
                                     (iconType === 'auto' && (name.startsWith('http') || name.startsWith('//')));
                    
                    return (
                        <li class="flex items-start gap-x-3 p-2 border border-gray-200 rounded-md shadow-sm hover:shadow-md transition">
                            <div class="h-8 w-8 flex-shrink-0">
                                {isUrlIcon ? (
                                    <img 
                                        src={name}
                                        alt={`${friendlyName} icon`}
                                        class="h-full w-full rounded object-cover"
                                        loading="lazy"
                                        onerror="this.style.display='none';"
                                    />
                                ) : (
                                    <Icon 
                                        aria-hidden="true" 
                                        class="h-full w-full text-gray-700" 
                                        focusable="false" 
                                        name={name} 
                                    />
                                )}
                            </div>
                            <div>
                                <a
                                    class="text-link font-semibold hover:underline"
                                    href={link}
                                    rel={`noreferrer ${isWebmention ? "me authn" : ""}`}
                                    target="_blank"
                                >
                                    {friendlyName}
                                </a>
                                {description && (
                                    <p class="text-sm text-gray-500">{description}</p>
                                )}
                            </div>
                        </li>
                    );
                })}
            </ul>
        </div>
    )}
</div>
