---
// 简洁版热力图组件
interface Props {
  data: Record<string, number>;
}

const { data = {} } = Astro.props;

// 获取所有可用年份
const allDates = Object.keys(data).map(d => new Date(d));
const availableYears = [...new Set(allDates.map(d => d.getFullYear()))].sort((a, b) => b - a);
const currentYear = new Date().getFullYear();

if (availableYears.length === 0) {
  availableYears.push(currentYear);
}
---

<div class="heatmap-container">
  <!-- 年份选择器 -->
  <div class="flex justify-between items-center mb-4">
    <div class="text-sm text-gray-600">
      <span id="year-stats">载入中...</span>
    </div>
    <select id="year-selector" class="px-3 py-1 border border-gray-300 rounded text-sm bg-white">
      {availableYears.map(year => (
        <option value={year} selected={year === currentYear}>
          {year}
        </option>
      ))}
    </select>
  </div>

  <!-- 热力图 -->
  <div class="heatmap-wrapper overflow-x-auto">
    <div id="heatmap-svg-container">
      <!-- SVG 将通过 JavaScript 动态生成 -->
    </div>
  </div>
  
  <!-- 颜色图例 -->
  <div class="mt-3 flex items-center text-xs text-gray-500">
    <span class="mr-2">少</span>
    <div class="flex gap-1">
      <div class="w-2.5 h-2.5 rounded-sm" style="background-color: #ebedf0;"></div>
      <div class="w-2.5 h-2.5 rounded-sm" style="background-color: #9be9a8;"></div>
      <div class="w-2.5 h-2.5 rounded-sm" style="background-color: #40c463;"></div>
      <div class="w-2.5 h-2.5 rounded-sm" style="background-color: #30a14e;"></div>
      <div class="w-2.5 h-2.5 rounded-sm" style="background-color: #216e39;"></div>
    </div>
    <span class="ml-2">多</span>
  </div>
</div>

<style>
  .heatmap-wrapper {
    padding-left: 30px;
    min-height: 120px;
  }
</style>

<script define:vars={{data, availableYears, currentYear}}>
  function getColor(count) {
    if (!count) return '#ebedf0';
    if (count >= 5) return '#216e39';
    if (count >= 3) return '#30a14e';
    if (count >= 2) return '#40c463';
    return '#9be9a8';
  }

  function getDateRange(start, end) {
    const arr = [];
    let dt = new Date(start);
    while (dt <= end) {
      arr.push(new Date(dt));
      dt.setDate(dt.getDate() + 1);
    }
    return arr;
  }

  function renderHeatmap(selectedYear) {
    const startDate = new Date(selectedYear, 0, 1);
    const endDate = new Date(selectedYear, 11, 31);
    
    const adjustedStart = new Date(startDate);
    adjustedStart.setDate(adjustedStart.getDate() - adjustedStart.getDay());
    
    const adjustedEnd = new Date(endDate);
    adjustedEnd.setDate(adjustedEnd.getDate() + (6 - adjustedEnd.getDay()));
    
    const days = getDateRange(adjustedStart, adjustedEnd);
    const weeks = Math.ceil(days.length / 7);
    
    const yearData = {};
    let totalCount = 0;
    
    Object.keys(data).forEach(dateStr => {
      if (new Date(dateStr).getFullYear() === selectedYear) {
        yearData[dateStr] = data[dateStr];
        totalCount += data[dateStr];
      }
    });

    document.getElementById('year-stats').textContent = `${selectedYear} 年共 ${totalCount} 篇文章`;

    const svgWidth = weeks * 14;
    const svgHeight = 7 * 14 + 20;
    
    let svg = `<svg width="${svgWidth}" height="${svgHeight}" viewBox="0 0 ${svgWidth} ${svgHeight}">`;
    
    // 月份标签
    for (let w = 0; w < weeks; w++) {
      const weekStart = days[w * 7];
      if (weekStart && weekStart.getDate() <= 7) {
        const month = weekStart.toLocaleDateString('zh-CN', { month: 'short' });
        svg += `<text x="${w * 14}" y="10" font-size="10" fill="#666" text-anchor="start">${month}</text>`;
      }
    }
    
    // 热力图方块
    svg += '<g transform="translate(0, 15)">';
    for (let w = 0; w < weeks; w++) {
      for (let d = 0; d < 7; d++) {
        const idx = w * 7 + d;
        const date = days[idx];
        if (date) {
          const key = date.toISOString().slice(0, 10);
          const count = yearData[key] || 0;
          const color = getColor(count);
          const title = `${date.toLocaleDateString('zh-CN')} ${count ? count + ' 篇文章' : '无文章'}`;
          
          svg += `<rect x="${w * 14}" y="${d * 14}" width="12" height="12" 
                    fill="${color}" rx="2" ry="2" stroke="#fff" stroke-width="1">
                    <title>${title}</title>
                  </rect>`;
        }
      }
    }
    svg += '</g>';
    
    // 星期标签
    const weekdays = ['日', '一', '二', '三', '四', '五', '六'];
    svg += '<g transform="translate(-25, 15)">';
    weekdays.forEach((day, i) => {
      svg += `<text x="0" y="${i * 14 + 9}" font-size="9" fill="#666" text-anchor="middle">${day}</text>`;
    });
    svg += '</g>';
    
    svg += '</svg>';
    
    document.getElementById('heatmap-svg-container').innerHTML = svg;
  }

  document.addEventListener('DOMContentLoaded', function() {
    const yearSelector = document.getElementById('year-selector');
    
    const initialYear = availableYears.includes(currentYear) ? currentYear : availableYears[0];
    yearSelector.value = initialYear;
    renderHeatmap(initialYear);
    
    yearSelector.addEventListener('change', function(e) {
      renderHeatmap(parseInt(e.target.value));
    });
  });
</script>