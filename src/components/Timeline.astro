---
// 横向时间轴组件（6个月版本）
interface Props {
  data: Record<string, number>;
  posts: any[];
  notes: any[];
}

const { data = {}, posts = [], notes = [] } = Astro.props;

// 获取过去6个月的数据
const now = new Date();
const months = [];
for (let i = 5; i >= 0; i--) {
  const date = new Date(now.getFullYear(), now.getMonth() - i, 1);
  months.push({
    date,
    year: date.getFullYear(),
    month: date.getMonth() + 1,
    shortName: `${date.getFullYear()}.${(date.getMonth() + 1).toString().padStart(2, '0')}`,
  });
}

// …保持你的 getDayArticles / monthlyData / allActiveDays 逻辑不变 …
---

<div class="timeline-container">
  <div class="mb-4">
    <p class="text-sm text-gray-600">Time Line</p>
  </div>

  <div class="timeline-horizontal">
    <div class="timeline-track relative" style="height: 100px;">
      <!-- 主轴线 -->
      <div class="absolute bottom-6 left-0 right-0 h-px bg-gray-400"></div>
      
      <!-- 月份标签 -->
      <div class="absolute bottom-0 left-0 right-0">
        {monthlyData.map((month) => {
          const monthPosition = (month.date.getTime() - months[0].date.getTime()) / (1000 * 60 * 60 * 24);
          const totalDays = (months[months.length - 1].date.getTime() - months[0].date.getTime()) / (1000 * 60 * 60 * 24);
          const leftPercentage = (monthPosition / totalDays) * 100;
          return (
            <div class="absolute text-xs text-gray-700 font-medium transform -translate-x-1/2" 
                 style={`left:${leftPercentage}%`}>
              {month.shortName}
            </div>
          );
        })}
      </div>

      <!-- 日期竖线 -->
      <div class="absolute bottom-6 left-0 right-0">
        {allActiveDays.map((day) => {
          const dayPosition = (day.date.getTime() - months[0].date.getTime()) / (1000 * 60 * 60 * 24);
          const totalDays = (months[months.length - 1].date.getTime() - months[0].date.getTime()) / (1000 * 60 * 60 * 24);
          const leftPercentage = (dayPosition / totalDays) * 100;

          return (
            <div class="absolute transform -translate-x-1/2 day-line-group" 
                 style={`left:${leftPercentage}%; bottom:0;`}>
              {day.articles.map((article) => (
                <div 
                  class="w-0.5 bg-blue-600 cursor-pointer hover:bg-blue-800"
                  style="height:14px; margin-bottom:1px;"
                  data-article-info={`${day.formatted}: ${article.title}`}
                  data-article-url={article.url}
                  data-article-type={article.type}
                ></div>
              ))}
            </div>
          );
        })}
      </div>

      <!-- 信息显示区域 -->
      <div id="info-display" 
           class="absolute bg-white border border-gray-300 rounded px-3 py-2 text-xs text-gray-700 shadow-sm opacity-0 transition-opacity pointer-events-auto whitespace-nowrap">
        <div id="info-content"></div>
        <div id="info-links" class="mt-1 space-y-1"></div>
      </div>
    </div>
  </div>
</div>

<style>
  .timeline-horizontal {
    position: relative;
    width: 100%;
  }
  #info-display {
    max-width: 300px;
    z-index: 50;
  }
  #info-links a {
    color: #2563eb;
    text-decoration: none;
  }
  #info-links a:hover {
    color: #1d4ed8;
    text-decoration: underline;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const infoDisplay = document.getElementById('info-display');
    const infoContent = document.getElementById('info-content');
    const infoLinks = document.getElementById('info-links');

    const dayGroups = document.querySelectorAll('.day-line-group');
    dayGroups.forEach(group => {
      const articles = group.querySelectorAll('.day-article-line, .w-0.5');
      group.addEventListener('mouseenter', function(e) {
        if (articles.length > 0) {
          const firstArticle = articles[0];
          const dateInfo = firstArticle.getAttribute('data-article-info').split(':')[0];
          infoContent.textContent = `${dateInfo}: ${articles.length} 篇文章`;
          infoLinks.innerHTML = '';
          articles.forEach(article => {
            const title = article.getAttribute('data-article-info').split(': ')[1];
            const url = article.getAttribute('data-article-url');
            const type = article.getAttribute('data-article-type');
            const linkDiv = document.createElement('div');
            linkDiv.innerHTML = `
              <a href="${url}" target="_blank" class="text-blue-600 hover:text-blue-800 hover:underline text-xs">
                ${title} <span class="text-gray-500">[${type}]</span>
              </a>
            `;
            infoLinks.appendChild(linkDiv);
          });
          infoDisplay.style.opacity = '1';
          infoDisplay.style.left = e.pageX + 'px';
          infoDisplay.style.top = (e.pageY + 20) + 'px';
        }
      });
      group.addEventListener('mousemove', function(e) {
        infoDisplay.style.left = e.pageX + 'px';
        infoDisplay.style.top = (e.pageY + 20) + 'px';
      });
      group.addEventListener('mouseleave', function() {
        infoDisplay.style.opacity = '0';
      });
    });
  });
</script>
